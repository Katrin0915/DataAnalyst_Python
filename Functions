{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "name": "Mod_4.ipynb",
      "provenance": [],
      "collapsed_sections": [],
      "toc_visible": true
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "markdown",
      "source": [
        "# Домашнее задание к лекции «Функции»"
      ],
      "metadata": {
        "id": "l8nZBtUqX2kd"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "## Задание\n",
        "\n",
        "### Вам нужно помочь секретарю автоматизировать работу. Для этого нужно написать программу, которая будет на основе хранимых данных исполнять пользовательские команды.\n",
        "\n",
        "#### Исходные данные имеют следующую структуру:​\n",
        "##### 1. перечень всех документов​\n",
        "##### documents = [\n",
        "{‘type’: ‘passport’, ‘number’: ‘2207 876234’, ‘name’: ‘Василий Гупкин’},\n",
        "{‘type’: ‘invoice’, ‘number’: ‘11-2’, ‘name’: ‘Геннадий Покемонов’},\n",
        "{‘type’: ‘insurance’, ‘number’: ‘10006’, ‘name’: ‘Аристарх Павлов’}\n",
        "]\n",
        "​\n",
        "##### 2.перечень полок, на которых хранятся документы (если документ есть в documents, то он обязательно должен быть и в directories)\n",
        "​\n",
        "##### directories = {\n",
        "‘1’: [‘2207 876234’, ‘11-2’],\n",
        "‘2’: [‘10006’],\n",
        "‘3’: []\n",
        "}\n",
        "​\n",
        "#### Общие требования к программе:​\n",
        "#### код должен быть грамотно декомпозирован (каждая функция отвечает за свою конкретную задачу, дублирующийся функционал переиспользуется, а его код не повторяется);\n",
        "#### в коде отсутствуют глобальные переменные (за исключением documents и directories);\n",
        "#### пользовательский ввод обрабатывается в цикле while до тех пор, пока пользователь явно не завершит программу (вводом команды “q”)."
      ],
      "metadata": {
        "id": "D2rhBE_pX_d8"
      }
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Задание 1"
      ],
      "metadata": {
        "id": "h0lzMN-qZMso"
      }
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "id": "ytpU-ygeXMAY",
        "outputId": "e70cdc2e-d658-4328-ee78-1971c172460a"
      },
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Введите команду:p\n",
            "Введите номер документа:42\n",
            "Документ не найден в базе\n",
            "Введите команду:p\n",
            "Введите номер документа:10006\n",
            "Аристарх Павлов\n",
            "Введите команду:s\n",
            "Введите номер документа:42\n",
            "Документ не найден в базе\n",
            "Введите команду:s\n",
            "Введите номер документа:11-2\n",
            "Документ хранится на полке: 1\n",
            "Введите команду:l\n",
            "№: 2207 876234, тип: passport, владелец: Василий Гупкин, полка хранения: 1\n",
            "№: 11-2, тип: invoice, владелец: Геннадий Покемонов, полка хранения: 1\n",
            "№: 10006, тип: insurance, владелец: Аристарх Павлов, полка хранения: 2\n",
            "Введите команду:q\n"
          ]
        }
      ],
      "source": [
        "documents = [\n",
        "{'type': 'passport', 'number': '2207 876234', 'name': 'Василий Гупкин'},\n",
        "{'type': 'invoice', 'number': '11-2', 'name': 'Геннадий Покемонов'},\n",
        "{'type': 'insurance', 'number': '10006', 'name': 'Аристарх Павлов'}]\n",
        "\n",
        "directories = {\n",
        "'1': ['2207 876234', '11-2'], '2': ['10006'], '3': []}\n",
        "\n",
        "# Пункт 1. Пользователь по команде “p” может узнать владельца документа по его номеру\n",
        "\n",
        "def doc():\n",
        "  '''\n",
        "  поиск владельца по номеру документа\n",
        "  '''\n",
        "  user_input2 = input('Введите номер документа:')\n",
        "  result = 'Документ не найден в базе'\n",
        "  for i in range(len(documents)):\n",
        "    if documents[i]['number'] == user_input2:\n",
        "      result = documents[i]['name']\n",
        "  return result\n",
        "\n",
        "# Пункт 2. Пользователь по команде “s” может по номеру документа узнать на какой полке он хранится\n",
        "\n",
        "def dir():\n",
        "  '''\n",
        "  поиск номера полки, где хранится документ\n",
        "  '''\n",
        "  user_input2 = input('Введите номер документа:')\n",
        "  result = 'Документ не найден в базе'\n",
        "  for key, value in directories.items():\n",
        "    if user_input2 in value:\n",
        "      result = key\n",
        "  return result\n",
        "\n",
        "# Пункт 3. Пользователь по команде “l” может увидеть полную информацию по всем документам\n",
        "\n",
        "def all_info():\n",
        "  '''\n",
        "  вывод полной информации по всем документам\n",
        "  '''\n",
        "  for i in range(len(documents)):\n",
        "    for key, value in directories.items():\n",
        "      if value != []:\n",
        "        if documents[i]['number'] in value:\n",
        "          result = print('№: ', documents[i]['number'], ', тип: ', documents[i]['type'], ', владелец: ', documents[i]['name'], ', полка хранения: ', key, sep='')\n",
        "  return result\n",
        "\n",
        "# Пункт 4. Пользователь по команде “as” может добавить новую полку\n",
        "\n",
        "def add_shelf():\n",
        "  '''\n",
        "  добавление полки для документов\n",
        "  '''\n",
        "  user_input2 = input('Введите номер полки:')\n",
        "  if user_input2 not in directories.keys():\n",
        "    directories[user_input2] = []\n",
        "    result = print('Полка добавлена. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  else:\n",
        "    result = print('Такая полка уже существует. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  return result\n",
        "\n",
        "# Пункт 5. Пользователь по команде “ds” может удалить существующую полку из данных (только если она пустая)\n",
        "\n",
        "def del_shelf():\n",
        "  user_input2 = input('Введите номер полки:')\n",
        "  if user_input2 in directories.keys():\n",
        "    if directories[user_input2] == []:\n",
        "      del(directories[user_input2])\n",
        "      result = print('Полка удалена. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "    elif directories[user_input2] != []:\n",
        "      result = print('На полке есть документы, удалите их перед удалением полки. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  else:\n",
        "    result = print('Такой полки не существует. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  return result\n",
        "\n",
        "# собираем все вместе\n",
        "user_input = input('Введите команду:')\n",
        "while user_input != 'q':\n",
        "  if user_input == 'p':\n",
        "    a = doc()\n",
        "    print(a)\n",
        "  elif user_input == 's':\n",
        "    a = dir()\n",
        "    if a == 'Документ не найден в базе':\n",
        "      print(a)\n",
        "    else:\n",
        "      print('Документ хранится на полке:', a)\n",
        "  elif user_input == 'l':\n",
        "    all_info()\n",
        "  elif user_input == 'as':\n",
        "    add_shelf()\n",
        "  elif user_input == 'ds':\n",
        "    del_shelf()\n",
        "  user_input = input('Введите команду:')  "
      ]
    },
    {
      "cell_type": "markdown",
      "source": [
        "### Задание 2 (необязательное)\n",
        "\n",
        "#### Вам необходимо дополнить программу из задания 1 более продвинутыми командами."
      ],
      "metadata": {
        "id": "C1IOozMHqzJf"
      }
    },
    {
      "cell_type": "code",
      "source": [
        "documents = [\n",
        "{'type': 'passport', 'number': '2207 876234', 'name': 'Василий Гупкин'},\n",
        "{'type': 'invoice', 'number': '11-2', 'name': 'Геннадий Покемонов'},\n",
        "{'type': 'insurance', 'number': '10006', 'name': 'Аристарх Павлов'}]\n",
        "\n",
        "directories = {\n",
        "'1': ['2207 876234', '11-2'], '2': ['10006'], '3': []}\n",
        "\n",
        "def doc(user_input2):\n",
        "  '''\n",
        "  поиск владельца по номеру документа\n",
        "  '''\n",
        "  result = 'Документ не найден в базе.'\n",
        "  for i in range(len(documents)):\n",
        "    if documents[i]['number'] == user_input2:\n",
        "      result = documents[i]['name']\n",
        "  return result\n",
        "\n",
        "def dir(user_input2):\n",
        "  '''\n",
        "  поиск номера полки, где хранится документ\n",
        "  '''\n",
        "  result = 'Документ не найден в базе.'\n",
        "  for key, value in directories.items():\n",
        "    if user_input2 in value:\n",
        "      result = key\n",
        "  return result\n",
        "\n",
        "def all_info():\n",
        "  '''\n",
        "  вывод полной информации по всем документам\n",
        "  '''\n",
        "  for i in range(len(documents)):\n",
        "    for key, value in directories.items():\n",
        "      if value != []:\n",
        "        if documents[i]['number'] in value:\n",
        "          result = print('№: ', documents[i]['number'], ', тип: ', documents[i]['type'], ', владелец: ', documents[i]['name'], ', полка хранения: ', key, sep='')\n",
        "  return result\n",
        "\n",
        "def add_shelf():\n",
        "  '''\n",
        "  добавление полки для документов\n",
        "  '''\n",
        "  user_input2 = input('Введите номер полки:')\n",
        "  if user_input2 not in directories.keys():\n",
        "    directories[user_input2] = []\n",
        "    result = print('Полка добавлена. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  else:\n",
        "    result = print('Такая полка уже существует. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  return result\n",
        "\n",
        "def del_shelf():\n",
        "  user_input2 = input('Введите номер полки:')\n",
        "  if user_input2 in directories.keys():\n",
        "    if directories[user_input2] == []:\n",
        "      del(directories[user_input2])\n",
        "      result = print('Полка удалена. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "    elif directories[user_input2] != []:\n",
        "      result = print('На полке есть документы, удалите их перед удалением полки. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  else:\n",
        "    result = print('Такой полки не существует. Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  return result\n",
        "\n",
        "# Пункт 1. Пользователь по команде “ad” может добавить новый документ в данные\n",
        "\n",
        "def add_doc ():\n",
        "  user_input2 = input('Введите номер документа:')\n",
        "  a = doc(user_input2)\n",
        "  if a == 'Документ не найден в базе.':\n",
        "    user_input3 = input('Введите тип документа:')\n",
        "    user_input4 = input('Введите владельца документа:')\n",
        "    user_input5 = input('Введите полку для хранения:')\n",
        "    if user_input5 not in directories.keys():\n",
        "      result = print('Такой полки не существует. Добавьте полку командой as')\n",
        "    else:\n",
        "      documents.append({'type': user_input3, 'number': user_input2, 'name': user_input4})\n",
        "      directories[user_input5] += [user_input2]\n",
        "      result = print('Документ добавлен.')\n",
        "  else:\n",
        "    result = print('Документ уже есть в базе.')\n",
        "  return result\n",
        "\n",
        "# Пункт 2. Пользователь по команде “d” может удалить документ из данных\n",
        "\n",
        "def del_doc(user_input2): \n",
        "  '''\n",
        "  удаление документа из базы\n",
        "  '''\n",
        "  result = 'Документ не найден в базе.'\n",
        "  for i in range(len(documents)):\n",
        "    if documents[i]['number'] == user_input2:\n",
        "      del(documents[i])\n",
        "      for value in directories.values():\n",
        "        for j in range(len(value)):\n",
        "          if value[j] == user_input2:\n",
        "            del(value[j])\n",
        "      result = 'Документ удален.'\n",
        "  return result\n",
        "\n",
        "# Пункт 3. Пользователь по команде “m” может переместить документ с полки на полку\n",
        "\n",
        "def rem_doc(user_input2):\n",
        "  '''\n",
        "  перемещение документа с полки на полку\n",
        "  '''\n",
        "  user_input6 = input('Введите номер полки:')\n",
        "  x = doc(user_input2)\n",
        "  y = dir(user_input2)\n",
        "  if x == 'Документ не найден в базе.':\n",
        "    result = x\n",
        "  elif user_input6 not in directories.keys():\n",
        "    result = 'Такой полки не существует.'\n",
        "  elif y == user_input6:\n",
        "    result = 'Документ уже находится на нужной полке.'  # в задании такого варианта нет; считаю, что это тоже нужно предусмотреть\n",
        "  else:\n",
        "    for value in directories.values(): # удаляем документ с полки\n",
        "        for i in range(len(value)):\n",
        "          if value[i] == user_input2:\n",
        "            del(value[i])\n",
        "    directories[user_input6].append(user_input2) # добавляем документ на нужную полку\n",
        "    result = 'Документ перемещен.'\n",
        "  return result\n",
        "    \n",
        "# собираем все вместе\n",
        "user_input = input('Введите команду:')\n",
        "while user_input != 'q':\n",
        "  if user_input == 'p':\n",
        "    user_input2 = input('Введите номер документа:')\n",
        "    a = doc(user_input2)\n",
        "    print(a)\n",
        "  elif user_input == 's':\n",
        "    user_input2 = input('Введите номер документа:')\n",
        "    a = dir(user_input2)\n",
        "    if a == 'Документ не найден в базе':\n",
        "      print(a)\n",
        "    else:\n",
        "      print('Документ хранится на полке:', a)\n",
        "  elif user_input == 'l':\n",
        "    all_info()\n",
        "  elif user_input == 'as':\n",
        "    add_shelf()\n",
        "  elif user_input == 'ds':\n",
        "    del_shelf()\n",
        "  elif user_input == 'ad':\n",
        "    add_doc()\n",
        "    print('Текущий список документов:')\n",
        "    all_info()\n",
        "  elif user_input == 'd':\n",
        "    user_input2 = input('Введите номер документа:')\n",
        "    a = del_doc(user_input2)\n",
        "    if a == 'Документ удален.':\n",
        "      b = dir(user_input2)\n",
        "    print(a)\n",
        "    print('Текущий список документов:')\n",
        "    all_info()\n",
        "  elif user_input == 'm':\n",
        "    user_input2 = input('Введите номер документа:')\n",
        "    a = rem_doc(user_input2)\n",
        "    if a in ('Документ не найден в базе.', 'Документ уже находится на нужной полке.', 'Документ перемещен.'):\n",
        "      print(a)\n",
        "      print('Текущий список документов:')\n",
        "      all_info()\n",
        "    elif a == 'Такой полки не существует.':\n",
        "      print(a)\n",
        "      print('Текущий перечень полок:', ','.join(list(directories.keys())))\n",
        "  print()\n",
        "  user_input = input('Введите команду:') "
      ],
      "metadata": {
        "id": "sgrF3HRt5RiL",
        "colab": {
          "base_uri": "https://localhost:8080/"
        },
        "outputId": "9f027cdf-2bdf-45d8-b219-506c5569691b"
      },
      "execution_count": null,
      "outputs": [
        {
          "name": "stdout",
          "output_type": "stream",
          "text": [
            "Введите команду:m\n",
            "Введите номер документа:11-2\n",
            "Введите номер полки:3\n",
            "Документ перемещен.\n",
            "Текущий список документов:\n",
            "№: 2207 876234, тип: passport, владелец: Василий Гупкин, полка хранения: 1\n",
            "№: 11-2, тип: invoice, владелец: Геннадий Покемонов, полка хранения: 3\n",
            "№: 10006, тип: insurance, владелец: Аристарх Павлов, полка хранения: 2\n",
            "\n",
            "Введите команду:m\n",
            "Введите номер документа:10006\n",
            "Введите номер полки:3\n",
            "Документ перемещен.\n",
            "Текущий список документов:\n",
            "№: 2207 876234, тип: passport, владелец: Василий Гупкин, полка хранения: 1\n",
            "№: 11-2, тип: invoice, владелец: Геннадий Покемонов, полка хранения: 3\n",
            "№: 10006, тип: insurance, владелец: Аристарх Павлов, полка хранения: 3\n",
            "\n",
            "Введите команду:q\n"
          ]
        }
      ]
    }
  ]
}
