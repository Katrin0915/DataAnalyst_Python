{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {
        "id": "view-in-github",
        "colab_type": "text"
      },
      "source": [
        "<a href=\"https://colab.research.google.com/github/Katrin0915/MyTraining/blob/main/Pandas_Web_scraping_%26_API\" target=\"_parent\"><img src=\"https://colab.research.google.com/assets/colab-badge.svg\" alt=\"Open In Colab\"/></a>"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "be444c53",
      "metadata": {
        "id": "be444c53"
      },
      "source": [
        "# Домашнее задание к лекции \"Основы веб-скрапинга и работы с API\""
      ]
    },
    {
      "cell_type": "markdown",
      "id": "2245fc39",
      "metadata": {
        "id": "2245fc39"
      },
      "source": [
        "## Задание 1."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6c2bc0a3",
      "metadata": {
        "id": "6c2bc0a3"
      },
      "source": [
        "### Обязательная часть\n",
        "#### Будем парсить страницу со свежеми новостям на habr.com/ru/all/.\n",
        "#### Вам необходимо собирать только те статьи, в заголовке которых встречается хотя бы одно требуемое ключевое слово. Эти слова определяем в начале кода в переменной, например:\n",
        "\n",
        "#### KEYWORDS = ['python', 'парсинг']\n",
        "\n",
        "#### В итоге должен формироваться датафрейм вида: <дата> - <заголовок> - <ссылка>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "92b9cf96",
      "metadata": {
        "id": "92b9cf96"
      },
      "outputs": [],
      "source": [
        "import requests\n",
        "from bs4 import BeautifulSoup\n",
        "import re\n",
        "import pandas as pd"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7898dc05",
      "metadata": {
        "id": "7898dc05"
      },
      "outputs": [],
      "source": [
        "URL_first = 'https://habr.com/ru/all/'\n",
        "KEYWORDS = ['linux', 'java', 'python']\n",
        "POST_FOR_US = pd.DataFrame()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f92c59c9",
      "metadata": {
        "id": "f92c59c9"
      },
      "outputs": [],
      "source": [
        "def get_last_page_number(URL):\n",
        "  ''' получаем количество страниц для пагинации'''\n",
        "  query = requests.get(URL)\n",
        "  # проверяем статус ответа на запрос\n",
        "  if query.status_code == 200:\n",
        "    soup = BeautifulSoup(query.text)\n",
        "    pagination = soup.find_all('a', class_= re.compile('pagination'))\n",
        "    for pag in pagination:\n",
        "      pag_text = pag.text.strip()\n",
        "      # если полученный текст состоит только из цифр - это то, что надо \n",
        "      if pag_text.isdigit() == True:\n",
        "        page_end = 0\n",
        "        # присваиваем переменной максимальное значение номера страницы\n",
        "        if int(pag_text) > page_end:\n",
        "          page_end = int(pag_text)\n",
        "  return page_end"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f4b20ede",
      "metadata": {
        "id": "f4b20ede"
      },
      "outputs": [],
      "source": [
        "def our_parser(URL, KEYWORDS, POST_FOR_US):\n",
        "  '''поиск статей на Хабре по ключевым словам в заголовке статьи'''\n",
        "  req = requests.get(URL)\n",
        "  # проверяем статус ответа на запрос\n",
        "  if req.status_code == 200:\n",
        "    soup = BeautifulSoup(req.text)\n",
        "    all_posts = soup.find_all('article', class_= re.compile('item'))\n",
        "    for post in all_posts:\n",
        "      post_id = post.get('id')\n",
        "      if not post_id:\n",
        "        continue\n",
        "      links = post.find_all('a', class_= re.compile('article-snip'))\n",
        "      if links == []:\n",
        "        continue\n",
        "      dates_ = post.find('span', class_= re.compile('publ')).find('time').get('datetime')\n",
        "      for link in links:\n",
        "        link_lower = link.text.lower()\n",
        "        link_get = 'https://habr.com' + link.get('href')  \n",
        "        for l in link_lower.split():\n",
        "          if l in KEYWORDS:\n",
        "            row = {'date': dates_[:10], 'title': link_lower, 'link': link_get}\n",
        "            POST_FOR_US = pd.concat([POST_FOR_US, pd.DataFrame(row, index=[0])])\n",
        "            break\n",
        "    return POST_FOR_US"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "f525e4f8",
      "metadata": {
        "id": "f525e4f8"
      },
      "outputs": [],
      "source": [
        "def next_page_link(URL):\n",
        "  '''получаем ссылку на следующую страницу'''\n",
        "  query = requests.get(URL)\n",
        "  # проверяем статус ответа на запрос\n",
        "  if query.status_code == 200:\n",
        "    soup = BeautifulSoup(query.text)\n",
        "    pagination = soup.find_all('a', class_= re.compile('pagination'))\n",
        "    for pag in pagination:\n",
        "      pag_get = pag.get('rel')\n",
        "      if pag_get == ['next']:\n",
        "        return 'https://habr.com'+ pag.get('href')"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "7a6564f0",
      "metadata": {
        "id": "7a6564f0"
      },
      "outputs": [],
      "source": [
        "# цикл для перебора страниц сайта\n",
        "URL_next = URL_first\n",
        "n = get_last_page_number(URL_first)\n",
        "# количество страниц может быть более 1000, поэтому можно предусмотреть вариант запроса количества у пользователя\n",
        "# n = int(input('Сколько страниц сайта перебрать поиском?')\n",
        "for i in range(n):\n",
        "  POST_FOR_US = our_parser(URL_next, KEYWORDS, POST_FOR_US)\n",
        "  URL_next = next_page_link(URL_next)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9f5c182c",
      "metadata": {
        "id": "9f5c182c",
        "outputId": "28e1423e-8d24-4028-91eb-78c5d9c7c074"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>title</th>\n",
              "      <th>link</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>почему я начал использовать аннотации типов в ...</td>\n",
              "      <td>https://habr.com/ru/company/piter/blog/653415/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>linux выживальщика</td>\n",
              "      <td>https://habr.com/ru/post/653405/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-23</td>\n",
              "      <td>как создать образ диска в linux с несколькими ...</td>\n",
              "      <td>https://habr.com/ru/post/653153/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-23</td>\n",
              "      <td>ручная кофемолка: инструменты командной строки...</td>\n",
              "      <td>https://habr.com/ru/post/652985/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-21</td>\n",
              "      <td>обнаружение новизны изображений с помощью pyth...</td>\n",
              "      <td>https://habr.com/ru/post/652851/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-20</td>\n",
              "      <td>машинное стереозрение для новичков: две камеры...</td>\n",
              "      <td>https://habr.com/ru/company/skillfactory/blog/...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-19</td>\n",
              "      <td>еще один способ развернуть python автотесты we...</td>\n",
              "      <td>https://habr.com/ru/post/652511/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-17</td>\n",
              "      <td>atlas: путешествие dropbox от монолита на pyth...</td>\n",
              "      <td>https://habr.com/ru/company/flant/blog/651871/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-16</td>\n",
              "      <td>как сделать qr код с картинкой на python</td>\n",
              "      <td>https://habr.com/ru/post/652003/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-16</td>\n",
              "      <td>уроки компьютерного зрения на python + opencv ...</td>\n",
              "      <td>https://habr.com/ru/post/651989/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-16</td>\n",
              "      <td>linux и бесплатные облачные хранилища, семь ле...</td>\n",
              "      <td>https://habr.com/ru/post/651609/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>принципы проектирования solid с примерами на p...</td>\n",
              "      <td>https://habr.com/ru/company/otus/blog/651753/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-15</td>\n",
              "      <td>реализация ряда тейлора на python</td>\n",
              "      <td>https://habr.com/ru/company/otus/blog/651659/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-09</td>\n",
              "      <td>конфигурационные файлы linux</td>\n",
              "      <td>https://habr.com/ru/company/first/blog/648793/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>java 18. что нового добавили, и почему вам это...</td>\n",
              "      <td>https://habr.com/ru/post/650289/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>9 причин использовать dataclasses в python</td>\n",
              "      <td>https://habr.com/ru/company/otus/blog/650257/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>портируем код c/c++ на python</td>\n",
              "      <td>https://habr.com/ru/company/otus/blog/650173/</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>скринкасты терминала. запись действий в консол...</td>\n",
              "      <td>https://habr.com/ru/company/first/blog/648773/</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         date                                              title  \\\n",
              "0  2022-02-25  почему я начал использовать аннотации типов в ...   \n",
              "0  2022-02-25                                 linux выживальщика   \n",
              "0  2022-02-23  как создать образ диска в linux с несколькими ...   \n",
              "0  2022-02-23  ручная кофемолка: инструменты командной строки...   \n",
              "0  2022-02-21  обнаружение новизны изображений с помощью pyth...   \n",
              "0  2022-02-20  машинное стереозрение для новичков: две камеры...   \n",
              "0  2022-02-19  еще один способ развернуть python автотесты we...   \n",
              "0  2022-02-17  atlas: путешествие dropbox от монолита на pyth...   \n",
              "0  2022-02-16           как сделать qr код с картинкой на python   \n",
              "0  2022-02-16  уроки компьютерного зрения на python + opencv ...   \n",
              "0  2022-02-16  linux и бесплатные облачные хранилища, семь ле...   \n",
              "0  2022-02-15  принципы проектирования solid с примерами на p...   \n",
              "0  2022-02-15                  реализация ряда тейлора на python   \n",
              "0  2022-02-09                       конфигурационные файлы linux   \n",
              "0  2022-02-07  java 18. что нового добавили, и почему вам это...   \n",
              "0  2022-02-07         9 причин использовать dataclasses в python   \n",
              "0  2022-02-07                      портируем код c/c++ на python   \n",
              "0  2022-02-07  скринкасты терминала. запись действий в консол...   \n",
              "\n",
              "                                                link  \n",
              "0     https://habr.com/ru/company/piter/blog/653415/  \n",
              "0                   https://habr.com/ru/post/653405/  \n",
              "0                   https://habr.com/ru/post/653153/  \n",
              "0                   https://habr.com/ru/post/652985/  \n",
              "0                   https://habr.com/ru/post/652851/  \n",
              "0  https://habr.com/ru/company/skillfactory/blog/...  \n",
              "0                   https://habr.com/ru/post/652511/  \n",
              "0     https://habr.com/ru/company/flant/blog/651871/  \n",
              "0                   https://habr.com/ru/post/652003/  \n",
              "0                   https://habr.com/ru/post/651989/  \n",
              "0                   https://habr.com/ru/post/651609/  \n",
              "0      https://habr.com/ru/company/otus/blog/651753/  \n",
              "0      https://habr.com/ru/company/otus/blog/651659/  \n",
              "0     https://habr.com/ru/company/first/blog/648793/  \n",
              "0                   https://habr.com/ru/post/650289/  \n",
              "0      https://habr.com/ru/company/otus/blog/650257/  \n",
              "0      https://habr.com/ru/company/otus/blog/650173/  \n",
              "0     https://habr.com/ru/company/first/blog/648773/  "
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "POST_FOR_US"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "ecb9f437",
      "metadata": {
        "id": "ecb9f437"
      },
      "source": [
        "### Дополнительная часть (необязательная)\n",
        "#### Улучшить скрипт так, чтобы он анализировал не только заголовки статьи, но и весь текст статьи целиком.\n",
        "\n",
        "#### Для этого потребуется получать страницы статей и искать по тексту внутри этой страницы.\n",
        "\n",
        "#### Итоговый датафрейм формировать со столбцами: <дата> - <заголовок> - <ссылка> - <текст_статьи>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6af50d0c",
      "metadata": {
        "id": "6af50d0c"
      },
      "outputs": [],
      "source": [
        "def get_post_text(URL_post):\n",
        "  '''получаем текст статьи'''\n",
        "  req = requests.get(URL_post)\n",
        "  # проверяем статус ответа на запрос\n",
        "  if req.status_code == 200:\n",
        "    soup = BeautifulSoup(req.text)\n",
        "    all_text = soup.find('div', class_=re.compile('article-body'))\n",
        "    post_text = all_text.text\n",
        "    return post_text"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "17fd1935",
      "metadata": {
        "id": "17fd1935"
      },
      "outputs": [],
      "source": [
        "def our_parser_full(URL, KEYWORDS, POST_FOR_US):\n",
        "  '''поиск статей на Хабре по ключевым словам в тексте статьи'''\n",
        "  req = requests.get(URL)\n",
        "  # проверяем статус ответа на запрос\n",
        "  if req.status_code == 200:\n",
        "    soup = BeautifulSoup(req.text)\n",
        "    all_posts = soup.find_all('article', class_= re.compile('item'))\n",
        "    for post in all_posts:\n",
        "      post_id = post.get('id')\n",
        "      if not post_id:\n",
        "        continue\n",
        "      links = post.find_all('a', class_= re.compile('article-snip'))\n",
        "      if links == []:\n",
        "        continue\n",
        "      dates_ = post.find('span', class_= re.compile('publ')).find('time').get('datetime')\n",
        "      for link in links:\n",
        "        link_lower = link.text.lower()\n",
        "        link_get = 'https://habr.com' + link.get('href')  \n",
        "        text = get_post_text(link_get)\n",
        "        for key in KEYWORDS:\n",
        "          if key in text:\n",
        "            row = {'date': dates_[:10], 'title': link_lower, 'link': link_get, 'text': text}\n",
        "            POST_FOR_US = pd.concat([POST_FOR_US, pd.DataFrame(row, index=[0])])\n",
        "            break\n",
        "    return POST_FOR_US"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "b1c7fba3",
      "metadata": {
        "id": "b1c7fba3"
      },
      "outputs": [],
      "source": [
        "# цикл для перебора страниц сайта\n",
        "URL_next = URL_first\n",
        "POST_FOR_US_2 = pd.DataFrame()\n",
        "n = get_last_page_number(URL_first)\n",
        "# количество страниц может быть более 1000, поэтому можно предусмотреть вариант запроса количества у пользователя\n",
        "# n = int(input('Сколько страниц сайта перебрать поиском?')\n",
        "for i in range(n):\n",
        "  POST_FOR_US_2 = our_parser_full(URL_next, KEYWORDS, POST_FOR_US_2)\n",
        "  URL_next = next_page_link(URL_next)"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "6d5a973c",
      "metadata": {
        "id": "6d5a973c",
        "outputId": "e7202b00-d6fd-4df1-bae2-28de4fca25c3"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>title</th>\n",
              "      <th>link</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-26</td>\n",
              "      <td>react seo: советы по созданию seo-friendly при...</td>\n",
              "      <td>https://habr.com/ru/post/653553/</td>\n",
              "      <td>Привет, Хабр! Представляю вашему вниманию пер...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>написание плагинов на spigot/bukkit</td>\n",
              "      <td>https://habr.com/ru/post/653525/</td>\n",
              "      <td>Первый мой туториал, просто хочу донести инфу...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>распознавание лиц на raspberry pi</td>\n",
              "      <td>https://habr.com/ru/post/653461/</td>\n",
              "      <td>Биометрия везде. Современные мегаполисы в Рос...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>тематическое моделирование с использованием эм...</td>\n",
              "      <td>https://habr.com/ru/post/653443/</td>\n",
              "      <td>Обработка естественного языка одно из востреб...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-25</td>\n",
              "      <td>почему я начал использовать аннотации типов в ...</td>\n",
              "      <td>https://habr.com/ru/company/piter/blog/653415/</td>\n",
              "      <td>С появлением подсказок типов (type hints) в P...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>...</th>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "      <td>...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>как обрабатывать объекты avro с помощью датасе...</td>\n",
              "      <td>https://habr.com/ru/company/otus/blog/650125/</td>\n",
              "      <td>Привет!В этом посте разберем, как обрабатыват...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>«пап, ты уже старый для этого»: как я в 40 лет...</td>\n",
              "      <td>https://habr.com/ru/company/yandex_praktikum/b...</td>\n",
              "      <td>Привет, меня зовут Андрей Рябцев. В июле 2021...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>извлечение ntlm hash пользователя из процесса ...</td>\n",
              "      <td>https://habr.com/ru/company/pm/blog/649689/</td>\n",
              "      <td>Приветствую вас, дорогие читатели! Сегодня я ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>veslo — расширение retrofit для тестирования (...</td>\n",
              "      <td>https://habr.com/ru/post/647499/</td>\n",
              "      <td>Статья расскажет о расширении для декларативн...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2022-02-07</td>\n",
              "      <td>домашний веб-сервер для чайников</td>\n",
              "      <td>https://habr.com/ru/post/650117/</td>\n",
              "      <td>Привет, Хабр! Относительно недавно после пары...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "<p>88 rows × 4 columns</p>\n",
              "</div>"
            ],
            "text/plain": [
              "          date                                              title  \\\n",
              "0   2022-02-26  react seo: советы по созданию seo-friendly при...   \n",
              "0   2022-02-25                написание плагинов на spigot/bukkit   \n",
              "0   2022-02-25                  распознавание лиц на raspberry pi   \n",
              "0   2022-02-25  тематическое моделирование с использованием эм...   \n",
              "0   2022-02-25  почему я начал использовать аннотации типов в ...   \n",
              "..         ...                                                ...   \n",
              "0   2022-02-07  как обрабатывать объекты avro с помощью датасе...   \n",
              "0   2022-02-07  «пап, ты уже старый для этого»: как я в 40 лет...   \n",
              "0   2022-02-07  извлечение ntlm hash пользователя из процесса ...   \n",
              "0   2022-02-07  veslo — расширение retrofit для тестирования (...   \n",
              "0   2022-02-07                   домашний веб-сервер для чайников   \n",
              "\n",
              "                                                 link  \\\n",
              "0                    https://habr.com/ru/post/653553/   \n",
              "0                    https://habr.com/ru/post/653525/   \n",
              "0                    https://habr.com/ru/post/653461/   \n",
              "0                    https://habr.com/ru/post/653443/   \n",
              "0      https://habr.com/ru/company/piter/blog/653415/   \n",
              "..                                                ...   \n",
              "0       https://habr.com/ru/company/otus/blog/650125/   \n",
              "0   https://habr.com/ru/company/yandex_praktikum/b...   \n",
              "0         https://habr.com/ru/company/pm/blog/649689/   \n",
              "0                    https://habr.com/ru/post/647499/   \n",
              "0                    https://habr.com/ru/post/650117/   \n",
              "\n",
              "                                                 text  \n",
              "0    Привет, Хабр! Представляю вашему вниманию пер...  \n",
              "0    Первый мой туториал, просто хочу донести инфу...  \n",
              "0    Биометрия везде. Современные мегаполисы в Рос...  \n",
              "0    Обработка естественного языка одно из востреб...  \n",
              "0    С появлением подсказок типов (type hints) в P...  \n",
              "..                                                ...  \n",
              "0    Привет!В этом посте разберем, как обрабатыват...  \n",
              "0    Привет, меня зовут Андрей Рябцев. В июле 2021...  \n",
              "0    Приветствую вас, дорогие читатели! Сегодня я ...  \n",
              "0    Статья расскажет о расширении для декларативн...  \n",
              "0    Привет, Хабр! Относительно недавно после пары...  \n",
              "\n",
              "[88 rows x 4 columns]"
            ]
          },
          "execution_count": 13,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "POST_FOR_US_2"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6e95e532",
      "metadata": {
        "id": "6e95e532"
      },
      "source": [
        "## Задание 2."
      ]
    },
    {
      "cell_type": "markdown",
      "id": "044d6b8b",
      "metadata": {
        "id": "044d6b8b"
      },
      "source": [
        "### Обязательная часть\n",
        "#### Написать скрипт, который будет проверять список e-mail адресов на утечку при помощи сервиса Avast Hack Ckeck. Список email-ов задаем переменной в начале кода:\n",
        "\n",
        "#### EMAIL = [xxx@x.ru, yyy@y.com]\n",
        "\n",
        "#### В итоге должен формироваться датафрейм со столбцами: <дата утечки> - <источник утечки> - <описание утечки>\n",
        "#### Подсказка: сервис работает при помощи \"скрытого\" API. Внимательно изучите post-запросы. Данные (почтовые адреса) передаются на сервис в json-формате (параметр json функции post)."
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9a6312c5",
      "metadata": {
        "id": "9a6312c5"
      },
      "outputs": [],
      "source": [
        "import json"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "3b012618",
      "metadata": {
        "id": "3b012618"
      },
      "outputs": [],
      "source": [
        "EMAIL = ['bogomolova1984@rambler.ru', 'biv869@mail.ru', 'zulfiye.kaya1509@gmail.com']\n",
        "url = 'https://identityprotection.avast.com/v1/web/query/site-breaches/unauthorized-data'"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "bb03e19a",
      "metadata": {
        "id": "bb03e19a"
      },
      "outputs": [],
      "source": [
        "headers = {'Accept': 'application/json, text/plain, */*',\n",
        "        'Accept-Encoding': 'gzip, deflate, br',\n",
        "        'Accept-Language': 'ru-RU,ru;q=0.9,en-US;q=0.8,en;q=0.7',\n",
        "        'Connection': 'keep-alive',\n",
        "        'Content-Type': 'application/json;charset=UTF-8',\n",
        "        'Host': 'identityprotection.avast.com',\n",
        "        'Origin': 'https://www.avast.com',\n",
        "        'Referer': 'https://www.avast.com/',\n",
        "        'sec-ch-ua': '\"Chromium\";v=\"92\", \" Not A;Brand\";v=\"99\", \"Google Chrome\";v=\"92\"',\n",
        "        'sec-ch-ua-mobile': '?0',\n",
        "        'Sec-Fetch-Dest': 'empty',\n",
        "        'Sec-Fetch-Mode': 'cors',\n",
        "        'Sec-Fetch-Site': 'same-site',\n",
        "        'User-Agent': 'Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/92.0.4515.159 Safari/537.36',\n",
        "        'Vaar-Header-App-Build-Version': '1.0.0',\n",
        "        'Vaar-Header-App-Product': 'hackcheck-web-avast',\n",
        "        'Vaar-Header-App-Product-Name': 'hackcheck-web-avast',\n",
        "        'Vaar-Version': '0',\n",
        "        'Access-Control-Allow-Credentials': 'true',\n",
        "        'Access-Control-Allow-Methods': 'POST',\n",
        "        'Access-Control-Allow-Origin': 'https://www.avast.com',\n",
        "        'Access-Control-Expose-Headers': 'Vaar-Version, Vaar-Status',\n",
        "        'Access-Control-Max-Age': '86400',\n",
        "        'Connection': 'keep-alive',\n",
        "        'Content-Type': 'application/json',\n",
        "        'Server': 'nginx',\n",
        "        'Vaar-Header-Execution-Chain-Id': '3224d669-242b-47c2-bcba-689443db864d',\n",
        "        'Vaar-Status': '0',\n",
        "        'Vaar-Version': '0',\n",
        "        'Vary': 'Origin,Access-Control-Request-Method'\n",
        "    }"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "0dda4c29",
      "metadata": {
        "id": "0dda4c29",
        "outputId": "7c1f830a-5598-4645-e828-5034bb41d1ae"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Response [200]>"
            ]
          },
          "execution_count": 5,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "payload = json.dumps({'emailAddresses': EMAIL})\n",
        "res = requests.post(url, headers = headers, data = payload)\n",
        "res"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "9f0ea59c",
      "metadata": {
        "id": "9f0ea59c",
        "outputId": "1fcad8f8-ea26-4049-f328-0efd6ea4cffc"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "{'breaches': {'12': {'breachId': 12,\n",
              "   'site': 'vk.com',\n",
              "   'recordsCount': 110121799,\n",
              "   'description': \"Popular Russian social networking platform VKontakte was breached in late 2012. Over 100 million clear-text passwords were compromised in the breach. Breached credential sets included victims' e-mail addresses, passwords, dates of birth, phone numbers and location details. The credential set was advertised on a dark web marketplace as of June 2016 for a price of one bitcoin. \",\n",
              "   'publishDate': '2016-10-29T00:00:00Z',\n",
              "   'statistics': {'usernames': 0,\n",
              "    'passwords': 107425364,\n",
              "    'emails': 104247327}},\n",
              "  '55': {'breachId': 55,\n",
              "   'site': 'rambler.ru',\n",
              "   'recordsCount': 91260749,\n",
              "   'description': 'On February 17, 2012, Russian email provider Rambler.ru, known colloquially as the \"Russian\" version of Yahoo, fell victim to a data breach that affected nearly 100 million users. Although the stolen data didn\\'t include sensitive financial information, user records included plaintext passwords. Although the breach occurred in 2012, it wasn\\'t publicized until September 2016.',\n",
              "   'publishDate': '2016-10-23T00:00:00Z',\n",
              "   'statistics': {'usernames': 91260444,\n",
              "    'passwords': 90763883,\n",
              "    'emails': 91260746}}},\n",
              " 'data': {'rambler.ru': {'bogomolova1984@rambler.ru': [{'breachId': 55,\n",
              "     'usernameBreached': True,\n",
              "     'passwordBreached': True}]},\n",
              "  'vk.com': {'bogomolova1984@rambler.ru': [{'breachId': 12,\n",
              "     'usernameBreached': False,\n",
              "     'passwordBreached': True}]}},\n",
              " 'summary': {'biv869@mail.ru': {'breaches': []},\n",
              "  'bogomolova1984@rambler.ru': {'breaches': [12, 55]},\n",
              "  'zulfiye.kaya1509@gmail.com': {'breaches': []}}}"
            ]
          },
          "execution_count": 6,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "res.json()"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "a1ee1fea",
      "metadata": {
        "id": "a1ee1fea",
        "outputId": "969d2eb9-af6a-48a4-be7f-72e08a5d97b6"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>publishDate</th>\n",
              "      <th>site</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>2016-10-29T00:00:00Z</td>\n",
              "      <td>vk.com</td>\n",
              "      <td>Popular Russian social networking platform VKo...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>2016-10-23T00:00:00Z</td>\n",
              "      <td>rambler.ru</td>\n",
              "      <td>On February 17, 2012, Russian email provider R...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "            publishDate        site  \\\n",
              "0  2016-10-29T00:00:00Z      vk.com   \n",
              "1  2016-10-23T00:00:00Z  rambler.ru   \n",
              "\n",
              "                                         description  \n",
              "0  Popular Russian social networking platform VKo...  \n",
              "1  On February 17, 2012, Russian email provider R...  "
            ]
          },
          "execution_count": 7,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_breaches = pd.DataFrame(res.json()['breaches'].values()).loc[:, ['publishDate', 'site', 'description']]\n",
        "df_breaches"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "39218523",
      "metadata": {
        "id": "39218523",
        "outputId": "e8de772c-497e-42c6-f3ba-1df21a4c4918"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>site</th>\n",
              "      <th>email</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>rambler.ru</td>\n",
              "      <td>bogomolova1984@rambler.ru</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>vk.com</td>\n",
              "      <td>bogomolova1984@rambler.ru</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "         site                      email\n",
              "0  rambler.ru  bogomolova1984@rambler.ru\n",
              "1      vk.com  bogomolova1984@rambler.ru"
            ]
          },
          "execution_count": 8,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "my_list = []\n",
        "site_and_email = res.json()['data'].items()\n",
        "for site, mail in site_and_email:\n",
        "  for m in mail:\n",
        "    my_list.append([site, m])\n",
        "df_data = pd.DataFrame(my_list, columns= ['site', 'email'])\n",
        "df_data"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "8655a59b",
      "metadata": {
        "id": "8655a59b",
        "outputId": "83749cdb-17cb-4bb3-bb40-9f937b9ad230"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>email</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>bogomolova1984@rambler.ru</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>biv869@mail.ru</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>zulfiye.kaya1509@gmail.com</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                        email\n",
              "0   bogomolova1984@rambler.ru\n",
              "1              biv869@mail.ru\n",
              "2  zulfiye.kaya1509@gmail.com"
            ]
          },
          "execution_count": 9,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_mail = pd.DataFrame(EMAIL, columns= ['email'])\n",
        "df_mail"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "28b60534",
      "metadata": {
        "id": "28b60534",
        "outputId": "98892af3-23d6-43cd-836b-1c88785808df"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>email</th>\n",
              "      <th>site</th>\n",
              "      <th>publishDate</th>\n",
              "      <th>description</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>bogomolova1984@rambler.ru</td>\n",
              "      <td>rambler.ru</td>\n",
              "      <td>2016-10-23T00:00:00Z</td>\n",
              "      <td>On February 17, 2012, Russian email provider R...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>bogomolova1984@rambler.ru</td>\n",
              "      <td>vk.com</td>\n",
              "      <td>2016-10-29T00:00:00Z</td>\n",
              "      <td>Popular Russian social networking platform VKo...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>biv869@mail.ru</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>zulfiye.kaya1509@gmail.com</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "      <td>NaN</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "                        email        site           publishDate  \\\n",
              "0   bogomolova1984@rambler.ru  rambler.ru  2016-10-23T00:00:00Z   \n",
              "1   bogomolova1984@rambler.ru      vk.com  2016-10-29T00:00:00Z   \n",
              "2              biv869@mail.ru         NaN                   NaN   \n",
              "3  zulfiye.kaya1509@gmail.com         NaN                   NaN   \n",
              "\n",
              "                                         description  \n",
              "0  On February 17, 2012, Russian email provider R...  \n",
              "1  Popular Russian social networking platform VKo...  \n",
              "2                                                NaN  \n",
              "3                                                NaN  "
            ]
          },
          "execution_count": 10,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "df_mail.merge(df_data, how='left').merge(df_breaches, how='left')"
      ]
    },
    {
      "cell_type": "markdown",
      "id": "6184ce37",
      "metadata": {
        "id": "6184ce37"
      },
      "source": [
        "### Дополнительная часть (необязательная)\n",
        "#### Написать скрипт, который будет получать 50 последних постов указанной группы во Вконтакте.\n",
        "#### Документация к API VK: https://vk.com/dev/methods , вам поможет метод wall.get\n",
        "\n",
        "#### GROUP = 'netology'  \n",
        "#### TOKEN = УДАЛЯЙТЕ В ВЕРСИИ ДЛЯ ПРОВЕРКИ, НА GITHUB НЕ ВЫКЛАДЫВАТЬ\n",
        "#### В итоге должен формироваться датафрейм со столбцами: <дата поста> - <текст поста>"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "42be2a87",
      "metadata": {
        "id": "42be2a87"
      },
      "outputs": [],
      "source": [
        "NEWSFEED_REQUEST = 'https://api.vk.com/method/wall.get?'\n",
        "TOKEN = ''\n",
        "VERSION = '5.131'\n",
        "SLEEP = 0.35"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "07831422",
      "metadata": {
        "id": "07831422"
      },
      "outputs": [],
      "source": [
        "params = {\n",
        "    'access_token': TOKEN,\n",
        "    'v': VERSION,\n",
        "    'domain': 'kalp_kalbe',\n",
        "    'count': 50\n",
        "    }"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "99464528",
      "metadata": {
        "id": "99464528",
        "outputId": "2cdc254c-c354-43bd-a64f-d116402c00f6"
      },
      "outputs": [
        {
          "data": {
            "text/plain": [
              "<Response [200]>"
            ]
          },
          "execution_count": 16,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "res = requests.get(NEWSFEED_REQUEST, params)\n",
        "res"
      ]
    },
    {
      "cell_type": "code",
      "execution_count": null,
      "id": "62face99",
      "metadata": {
        "id": "62face99",
        "outputId": "d272e1e3-fe8d-4d1f-8fd1-d41a907b6872"
      },
      "outputs": [
        {
          "data": {
            "text/html": [
              "<div>\n",
              "<style scoped>\n",
              "    .dataframe tbody tr th:only-of-type {\n",
              "        vertical-align: middle;\n",
              "    }\n",
              "\n",
              "    .dataframe tbody tr th {\n",
              "        vertical-align: top;\n",
              "    }\n",
              "\n",
              "    .dataframe thead th {\n",
              "        text-align: right;\n",
              "    }\n",
              "</style>\n",
              "<table border=\"1\" class=\"dataframe\">\n",
              "  <thead>\n",
              "    <tr style=\"text-align: right;\">\n",
              "      <th></th>\n",
              "      <th>date</th>\n",
              "      <th>text</th>\n",
              "    </tr>\n",
              "  </thead>\n",
              "  <tbody>\n",
              "    <tr>\n",
              "      <th>0</th>\n",
              "      <td>1640990280</td>\n",
              "      <td>Yeni yılda tüm ümutlar ve başarılar sizinle ol...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>1</th>\n",
              "      <td>1645959601</td>\n",
              "      <td>Eğer birisi beni hayal kırıklığına uğratırsa, ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>2</th>\n",
              "      <td>1645956000</td>\n",
              "      <td>Kendi yolunuzda giderken,cekmek için bir başka...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>3</th>\n",
              "      <td>1645952402</td>\n",
              "      <td>Kimseden bir şey bekleme. Böylece asla hayal k...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>4</th>\n",
              "      <td>1645948801</td>\n",
              "      <td>Забвение — тайна вечной молодости . \\nМы старе...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>5</th>\n",
              "      <td>1645945201</td>\n",
              "      <td>Kendini çok zorlama , en güzel şeyler beklenme...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>6</th>\n",
              "      <td>1645941600</td>\n",
              "      <td>Kaybetmekten mi korkuyorsun - kaybet ! Düşmekt...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>7</th>\n",
              "      <td>1645938000</td>\n",
              "      <td>Моя жизнь — это поезд . В лучшие мои моменты \\...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>8</th>\n",
              "      <td>1645934400</td>\n",
              "      <td>Günaydın 🌹 Mutluluk ve sevgi dolu bir gün geçi...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>9</th>\n",
              "      <td>1645902000</td>\n",
              "      <td>Моё сердце стучит только для тех , кто умеет е...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>10</th>\n",
              "      <td>1645898400</td>\n",
              "      <td>Когда мужчину и женщину тянет друг к другу, \\n...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>11</th>\n",
              "      <td>1645894800</td>\n",
              "      <td>Sonuçta sevilen her kadın güzel bir şarkıya dö...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>12</th>\n",
              "      <td>1645891200</td>\n",
              "      <td>У меня тоже есть неизменная плохая привычка , ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>13</th>\n",
              "      <td>1645887600</td>\n",
              "      <td>Если уже игра в любовь заставляет человека так...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>14</th>\n",
              "      <td>1645884000</td>\n",
              "      <td>Не страшно пoтерять людей, котoрым ты не нужен...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>15</th>\n",
              "      <td>1645880400</td>\n",
              "      <td>Ben başkaları gibi değilim. Çok sevindiğim, me...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>16</th>\n",
              "      <td>1645876801</td>\n",
              "      <td>Первое богатство - здоровье, \\nвторое богатств...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>17</th>\n",
              "      <td>1645873201</td>\n",
              "      <td>Меня можно удивить только любовью … настоящей ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>18</th>\n",
              "      <td>1645869601</td>\n",
              "      <td>Те, кто нас знает, знают по-настоящему. \\nОста...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>19</th>\n",
              "      <td>1645866001</td>\n",
              "      <td>Herkesin tanıdığı istisnai insanları vardır .....</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>20</th>\n",
              "      <td>1645862400</td>\n",
              "      <td>Не забывайте, что миром правит женщина. \\nИ ес...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>21</th>\n",
              "      <td>1645858800</td>\n",
              "      <td>Друзья делают нашу жизнь ярче и красивее . \\n ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>22</th>\n",
              "      <td>1645855200</td>\n",
              "      <td>Eğer sen güzellikleri görmek yeteneğine sahibs...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>23</th>\n",
              "      <td>1645851600</td>\n",
              "      <td>Gülümse ! Sonuçta birileri seni seviyor !</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>24</th>\n",
              "      <td>1645848000</td>\n",
              "      <td>Günaydın 🌹 Yüzlere gülücük 😊 , Yüreklere mutlu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>25</th>\n",
              "      <td>1645815600</td>\n",
              "      <td>Любовь - это цветок, который расцветает в кажд...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>26</th>\n",
              "      <td>1645812000</td>\n",
              "      <td>Если ты любишь человека таким какой он есть , ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>27</th>\n",
              "      <td>1645808400</td>\n",
              "      <td>Benim tek doğrum sensin ! \\n \\nТы моя единстве...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>28</th>\n",
              "      <td>1645804800</td>\n",
              "      <td>-Ну, расскажи же, как так случилось, что ты ме...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>29</th>\n",
              "      <td>1645801200</td>\n",
              "      <td>Если вы кого то любите , просите его у Бога \\n...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>30</th>\n",
              "      <td>1645797600</td>\n",
              "      <td>Любовь - это нечто больше , чем просто чувство...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>31</th>\n",
              "      <td>1645794000</td>\n",
              "      <td>Sözlerini tutmuyordu , bu yüzden ben de ona tu...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>32</th>\n",
              "      <td>1645790400</td>\n",
              "      <td>Жизнь спросила у СМЕРТИ: \\n\"Почему люди меня о...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>33</th>\n",
              "      <td>1645786800</td>\n",
              "      <td>Sonunda birilerinin seni sevmediği, senin soru...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>34</th>\n",
              "      <td>1645783201</td>\n",
              "      <td>Больше прожил не тот, кто прожил больше всех л...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>35</th>\n",
              "      <td>1645779601</td>\n",
              "      <td>Не надо меня недооценивать лишь потому , что я...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>36</th>\n",
              "      <td>1645776000</td>\n",
              "      <td>Kendini diğerlerine göre yargılamak daha çok z...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>37</th>\n",
              "      <td>1645772400</td>\n",
              "      <td>Своих друзей я ни сердцем , ни разумом люблю ,...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>38</th>\n",
              "      <td>1645768800</td>\n",
              "      <td>En iyi öğretmenimiz - hayatın kendisidir , \\nç...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>39</th>\n",
              "      <td>1645765200</td>\n",
              "      <td>Aslında hayat basittir. Ama biz onu ısrarla zo...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>40</th>\n",
              "      <td>1645761600</td>\n",
              "      <td>Günü aydın yapan güneşin doğuşu değil, yüreğin...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>41</th>\n",
              "      <td>1645729200</td>\n",
              "      <td>Sana sarılmak arzusuyla uyandım. Cok özlüyorum...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>42</th>\n",
              "      <td>1645725600</td>\n",
              "      <td>Некоторые люди не слышат , что ты говоришь , \\...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>43</th>\n",
              "      <td>1645722000</td>\n",
              "      <td>Женщины ссорятся только с теми , с кем потом х...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>44</th>\n",
              "      <td>1645718400</td>\n",
              "      <td>Муж: Жизнь моя, сегодня после работы я попал в...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>45</th>\n",
              "      <td>1645714801</td>\n",
              "      <td>Tatlı şeylerden ... Dudaklarını tercih ederim ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>46</th>\n",
              "      <td>1645711200</td>\n",
              "      <td>Следуя по дороге жизни, нужно научиться без со...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>47</th>\n",
              "      <td>1645707601</td>\n",
              "      <td>Güzel bir gülü , güzel bir geceyi , güzel bir ...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>48</th>\n",
              "      <td>1645704001</td>\n",
              "      <td>Если какой-нибудь женщине удастся украсть у ме...</td>\n",
              "    </tr>\n",
              "    <tr>\n",
              "      <th>49</th>\n",
              "      <td>1645700400</td>\n",
              "      <td>Если найдёте причину от меня уйти, \\nнайдите п...</td>\n",
              "    </tr>\n",
              "  </tbody>\n",
              "</table>\n",
              "</div>"
            ],
            "text/plain": [
              "          date                                               text\n",
              "0   1640990280  Yeni yılda tüm ümutlar ve başarılar sizinle ol...\n",
              "1   1645959601  Eğer birisi beni hayal kırıklığına uğratırsa, ...\n",
              "2   1645956000  Kendi yolunuzda giderken,cekmek için bir başka...\n",
              "3   1645952402  Kimseden bir şey bekleme. Böylece asla hayal k...\n",
              "4   1645948801  Забвение — тайна вечной молодости . \\nМы старе...\n",
              "5   1645945201  Kendini çok zorlama , en güzel şeyler beklenme...\n",
              "6   1645941600  Kaybetmekten mi korkuyorsun - kaybet ! Düşmekt...\n",
              "7   1645938000  Моя жизнь — это поезд . В лучшие мои моменты \\...\n",
              "8   1645934400  Günaydın 🌹 Mutluluk ve sevgi dolu bir gün geçi...\n",
              "9   1645902000  Моё сердце стучит только для тех , кто умеет е...\n",
              "10  1645898400  Когда мужчину и женщину тянет друг к другу, \\n...\n",
              "11  1645894800  Sonuçta sevilen her kadın güzel bir şarkıya dö...\n",
              "12  1645891200  У меня тоже есть неизменная плохая привычка , ...\n",
              "13  1645887600  Если уже игра в любовь заставляет человека так...\n",
              "14  1645884000  Не страшно пoтерять людей, котoрым ты не нужен...\n",
              "15  1645880400  Ben başkaları gibi değilim. Çok sevindiğim, me...\n",
              "16  1645876801  Первое богатство - здоровье, \\nвторое богатств...\n",
              "17  1645873201  Меня можно удивить только любовью … настоящей ...\n",
              "18  1645869601  Те, кто нас знает, знают по-настоящему. \\nОста...\n",
              "19  1645866001  Herkesin tanıdığı istisnai insanları vardır .....\n",
              "20  1645862400  Не забывайте, что миром правит женщина. \\nИ ес...\n",
              "21  1645858800  Друзья делают нашу жизнь ярче и красивее . \\n ...\n",
              "22  1645855200  Eğer sen güzellikleri görmek yeteneğine sahibs...\n",
              "23  1645851600          Gülümse ! Sonuçta birileri seni seviyor !\n",
              "24  1645848000  Günaydın 🌹 Yüzlere gülücük 😊 , Yüreklere mutlu...\n",
              "25  1645815600  Любовь - это цветок, который расцветает в кажд...\n",
              "26  1645812000  Если ты любишь человека таким какой он есть , ...\n",
              "27  1645808400  Benim tek doğrum sensin ! \\n \\nТы моя единстве...\n",
              "28  1645804800  -Ну, расскажи же, как так случилось, что ты ме...\n",
              "29  1645801200  Если вы кого то любите , просите его у Бога \\n...\n",
              "30  1645797600  Любовь - это нечто больше , чем просто чувство...\n",
              "31  1645794000  Sözlerini tutmuyordu , bu yüzden ben de ona tu...\n",
              "32  1645790400  Жизнь спросила у СМЕРТИ: \\n\"Почему люди меня о...\n",
              "33  1645786800  Sonunda birilerinin seni sevmediği, senin soru...\n",
              "34  1645783201  Больше прожил не тот, кто прожил больше всех л...\n",
              "35  1645779601  Не надо меня недооценивать лишь потому , что я...\n",
              "36  1645776000  Kendini diğerlerine göre yargılamak daha çok z...\n",
              "37  1645772400  Своих друзей я ни сердцем , ни разумом люблю ,...\n",
              "38  1645768800  En iyi öğretmenimiz - hayatın kendisidir , \\nç...\n",
              "39  1645765200  Aslında hayat basittir. Ama biz onu ısrarla zo...\n",
              "40  1645761600  Günü aydın yapan güneşin doğuşu değil, yüreğin...\n",
              "41  1645729200  Sana sarılmak arzusuyla uyandım. Cok özlüyorum...\n",
              "42  1645725600  Некоторые люди не слышат , что ты говоришь , \\...\n",
              "43  1645722000  Женщины ссорятся только с теми , с кем потом х...\n",
              "44  1645718400  Муж: Жизнь моя, сегодня после работы я попал в...\n",
              "45  1645714801  Tatlı şeylerden ... Dudaklarını tercih ederim ...\n",
              "46  1645711200  Следуя по дороге жизни, нужно научиться без со...\n",
              "47  1645707601  Güzel bir gülü , güzel bir geceyi , güzel bir ...\n",
              "48  1645704001  Если какой-нибудь женщине удастся украсть у ме...\n",
              "49  1645700400  Если найдёте причину от меня уйти, \\nнайдите п..."
            ]
          },
          "execution_count": 17,
          "metadata": {},
          "output_type": "execute_result"
        }
      ],
      "source": [
        "pd.DataFrame(res.json()['response']['items']).loc[:,['date', 'text']]"
      ]
    }
  ],
  "metadata": {
    "kernelspec": {
      "display_name": "Python 3 (ipykernel)",
      "language": "python",
      "name": "python3"
    },
    "language_info": {
      "codemirror_mode": {
        "name": "ipython",
        "version": 3
      },
      "file_extension": ".py",
      "mimetype": "text/x-python",
      "name": "python",
      "nbconvert_exporter": "python",
      "pygments_lexer": "ipython3",
      "version": "3.9.7"
    },
    "colab": {
      "name": "Pandas. Web-scraping & API.ipynb",
      "provenance": [],
      "include_colab_link": true
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}